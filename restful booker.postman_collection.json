{
	"info": {
		"_postman_id": "8b796b19-bdc5-4abe-a2ce-f2d924b3a715",
		"name": "restful booker",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27496889"
	},
	"item": [
		{
			"name": "create token",
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "703f10ac65acf1b8c8c39b013793ce0246a4e9ad",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "publickeymarvel",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{restfull TEST SITE}}/auth",
					"host": [
						"{{restfull TEST SITE}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_booking_ids",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body has bookingid\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"bookingid\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{restfull TEST SITE}}/booking",
					"host": [
						"{{restfull TEST SITE}}"
					],
					"path": [
						"booking"
					],
					"query": [
						{
							"key": "firstname",
							"value": "Sally",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get_booking_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"firstname\", \"lastname\",\"totalprice\", \"depositpaid\", \"bookingdates\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{restfull TEST SITE}}/booking/73",
					"host": [
						"{{restfull TEST SITE}}"
					],
					"path": [
						"booking",
						"73"
					],
					"query": [
						{
							"key": "firstname",
							"value": "Sally",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get_booking_id_doesnt_exist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"pm.test(\"Body contain string 'Not Found'\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Not Found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{restfull TEST SITE}}/booking/00000",
					"host": [
						"{{restfull TEST SITE}}"
					],
					"path": [
						"booking",
						"00000"
					],
					"query": [
						{
							"key": "firstname",
							"value": "Sally",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get_booking_ids_filter_name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{restfull TEST SITE}}/booking?firstname=John&lastname=Smith",
					"host": [
						"{{restfull TEST SITE}}"
					],
					"path": [
						"booking"
					],
					"query": [
						{
							"key": "firstname",
							"value": "John"
						},
						{
							"key": "lastname",
							"value": "Smith"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get_booking_ids_filter_date",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{restfull TEST SITE}}/booking/?checkin=2018-01-01",
					"host": [
						"{{restfull TEST SITE}}"
					],
					"path": [
						"booking",
						""
					],
					"query": [
						{
							"key": "checkin",
							"value": "2018-01-01"
						},
						{
							"key": "checkout",
							"value": "2019-01-01",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create_booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.variables.get(\"{{$randomFirstName}}\");\r",
							"pm.variables.get(\"{{$randomLastName}}\");\r",
							"pm.variables.get(\"{{$randomPrice}}\");\r",
							"\r",
							"\r",
							"pm.test(\"First Name check\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.firstname).to.eql(pm.variables.get(\"{{$randomFirstName}}\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Last name check\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.lastname).to.eql(pm.variables.get(\"{{$randomLastName}}\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Price check\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.totalprice).to.eql(pm.variables.get(\"{{$randomPrice}}\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"{{$randomFirstName}}\",\r\n    \"lastname\" : \"{{$randomLastName}}\",\r\n    \"totalprice\" : {{$randomPrice}},\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2023-01-01\",\r\n        \"checkout\" : \"2023-12-31\"\r\n    },\r\n    \"additionalneeds\" : \"All inclusive\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{restfull TEST SITE}}/booking",
					"host": [
						"{{restfull TEST SITE}}"
					],
					"path": [
						"booking"
					]
				},
				"description": "Endpoit has a bad status(200). Should be 201 or 202."
			},
			"response": []
		},
		{
			"name": "update_booking",
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "",
							"type": "string"
						},
						{
							"key": "key",
							"value": "",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Jacek\",\r\n    \"lastname\" : \"Brazowy\",\r\n    \"totalprice\" : 999,\r\n    \"depositpaid\" : false,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-02\",\r\n        \"checkout\" : \"2019-01-10\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{restfull TEST SITE}}/booking/1",
					"host": [
						"{{restfull TEST SITE}}"
					],
					"path": [
						"booking",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "partial_update_booking",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Jacek\",\r\n    \"lastname\" : \"Brazowy\",\r\n    \"totalprice\" : 999,\r\n    \"depositpaid\" : false,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-02\",\r\n        \"checkout\" : \"2019-01-10\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{restfull TEST SITE}}/booking/1\n",
					"host": [
						"{{restfull TEST SITE}}"
					],
					"path": [
						"booking",
						"1\n"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete_booking",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "",
							"type": "string"
						},
						{
							"key": "password",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{restfull TEST SITE}}/booking/2",
					"host": [
						"{{restfull TEST SITE}}"
					],
					"path": [
						"booking",
						"2"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "abc123",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}